openapi: 3.0.3
info:
  title: The SpatioTemporal Asset Catalog API - Item Search
  version: 1.0.0-beta.1
  description: This is an OpenAPI definition of the SpatioTemporal Asset Catalog API Item Search specification.
  contact:
    name: STAC Specification
    url: 'http://stacspec.org'
  license:
    name: Apache License 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
tags:
  - name: Item Search
    description: essential characteristics of a STAC API
paths:
  /search:
    get:
      summary: Search STAC items with simple filtering.
      operationId: getItemSearch
      description: |-
        Retrieve Items matching filters. Intended as a shorthand API for simple
        queries.

        This method is optional, but you MUST implement `POST /search` if you
        want to implement this method.

        If this endpoint is implemented on a server, it is required to add a
        link referring to this endpoint with `rel` set to `search` to the
        `links` array in `GET /`. As `GET` is the default method, the `method`
        may not be set explicitly in the link.
      tags:
        - Item Search
      parameters:
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/ids'
        - $ref: '#/components/parameters/collectionsArray'
        - name: fields
          x-stac-api-fragment: fields
          in: query
          description: |-
            **Optional Extension:** Fields

            Determines the shape of the features in the response
          required: false
          schema:
            type: string
            example: 'id,type,-geometry,bbox,properties,-links,-assets'
          style: form
          explode: false
        - name: query
          x-stac-api-fragment: query
          in: query
          description: |-
            **Optional Extension:** Query

            Query for properties in items.
            Use the JSON form of the query used in POST.
          required: false
          schema:
            type: string
        - name: sortby
          x-stac-api-fragment: sort
          in: query
          description: |-
            **Optional Extension:** Sort

            An array of property names, prefixed by either "+" for ascending or
            "-" for descending. If no prefix is provided, "+" is assumed.
          required: false
          schema:
            type: string
            example: '+id,-properties.eo:cloud_cover'
          style: form
          explode: false
      responses:
        '200':
          description: A feature collection.
          content:
            application/geo+json:
              schema:
                allOf:
                  - $ref: '#/paths/~1search/post/responses/200/content/application~1geo%2Bjson/schema'
                  - type: object
                    description: |-
                      **Optional Extension:** Context

                      Augments lists of resources with the number of returned and matches resource and the given limit for the request.
                    x-stac-api-fragment: context
                    properties:
                      context:
                        type: object
                        required:
                          - returned
                        properties:
                          returned:
                            type: integer
                            minimum: 0
                            example: 1
                          limit:
                            type: integer
                            nullable: true
                            minimum: 0
                            example: 5
                          matched:
                            type: integer
                            minimum: 0
                            example: 314159
            text/html:
              schema:
                type: string
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                type: object
                description: 'Information about the exception: an error code plus an optional description.'
                required:
                  - code
                properties:
                  code:
                    type: string
                  description:
                    type: string
    post:
      summary: Search STAC items with full-featured filtering.
      operationId: postItemSearch
      description: |-
        retrieve items matching filters. Intended as the standard, full-featured
        query API.

        This method is mandatory to implement if `GET /search` is implemented.
        If this endpoint is implemented on a server, it is required to add a
        link referring to this endpoint with `rel` set to `search` and `method`
        set to `POST` to the `links` array in `GET /`.
      tags:
        - Item Search
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/searchBody'
                - type: object
                  x-stac-api-fragment: fields
                  description: |-
                    **Optional Extension:** Fields

                    Determines the shape of the features in the response
                  properties:
                    fields:
                      description: |
                        The include and exclude members specify an array of
                        property names that are either included or excluded
                        from the result, respectively. If both include and
                        exclude are specified, include takes precedence.
                        Values should include the full JSON path of the property.
                      type: object
                      properties:
                        include:
                          type: array
                          items:
                            type: string
                        exclude:
                          type: array
                          items:
                            type: string
                      example:
                        include:
                          - id
                          - 'properties.eo:cloud_cover'
                        exclude:
                          - geometry
                          - properties.datetime
                - type: object
                  x-stac-api-fragment: query
                  description: |-
                    **Optional Extension:** Query

                    Allows users to query properties for specific values
                  properties:
                    query:
                      type: object
                      description: Define which properties to query and the operations to apply
                      additionalProperties:
                        description: Apply query operations to a specific property
                        anyOf:
                          - description: 'if the object doesn''t contain any of the operators, it is equivalent to using the equals operator'
                          - type: object
                            description: Match using an operator
                            properties:
                              eq:
                                description: 'Find items with a property that is equal to the specified value. For strings, a case-insensitive comparison must be performed.'
                                nullable: true
                                oneOf:
                                  - type: string
                                  - type: number
                                  - type: boolean
                              neq:
                                description: 'Find items that *don''t* contain the specified value. For strings, a case-insensitive comparison must be performed.'
                                nullable: true
                                oneOf:
                                  - type: string
                                  - type: number
                                  - type: boolean
                              gt:
                                description: Find items with a property value greater than the specified value.
                                oneOf:
                                  - type: string
                                    format: date-time
                                  - type: number
                              lt:
                                description: Find items with a property value less than the specified value.
                                oneOf:
                                  - type: string
                                    format: date-time
                                  - type: number
                              gte:
                                description: Find items with a property value greater than or equal the specified value.
                                oneOf:
                                  - type: string
                                    format: date-time
                                  - type: number
                              lte:
                                description: Find items with a property value less than or equal the specified value.
                                oneOf:
                                  - type: string
                                    format: date-time
                                  - type: number
                              startsWith:
                                description: Find items with a property that begins with the specified string. A case-insensitive comparison must be performed.
                                type: string
                              endsWith:
                                description: Find items with a property that ends with the specified string. A case-insensitive comparison must be performed.
                                type: string
                              contains:
                                description: 'Find items with a property that contains the specified literal string, e.g., matches ".*<STRING>.*". A case-insensitive comparison must be performed.'
                                type: string
                              in:
                                description: Find items with a property that equals at least one entry in the specified array. A case-insensitive comparison must be performed.
                                type: array
                                items:
                                  oneOf:
                                    - type: string
                                    - type: number
                      example:
                        'eo:cloud_cover':
                          gt: 8
                          lt: 50
                        platform:
                          eq: landsat-8
                        datetime:
                          gte: '2018-02-12T00:00:00Z'
                          lte: '2018-03-18T12:31:12Z'
                        'pl:item_type':
                          startsWith: PSScene
                        product:
                          in:
                            - foo
                            - bar
                            - baz
                        'eo:gsd':
                          in:
                            - 10
                            - 20
                - type: object
                  x-stac-api-fragment: sort
                  description: |-
                    **Optional Extension:** Sort

                    Sort the results.
                  properties:
                    sortby:
                      type: array
                      description: |
                        An array of objects containing a property name and sort direction.
                      minItems: 1
                      items:
                        type: object
                        required:
                          - field
                          - direction
                        properties:
                          field:
                            type: string
                          direction:
                            type: string
                            default: asc
                            enum:
                              - asc
                              - desc
                      example:
                        - field: 'properties.eo:cloud_cover'
                          direction: asc
                        - field: id
                          direction: desc
      responses:
        '200':
          description: A feature collection.
          content:
            application/geo+json:
              schema:
                description: A GeoJSON FeatureCollection augmented with foreign members that contain values relevant to a STAC entity
                type: object
                required:
                  - stac_version
                  - features
                  - type
                properties:
                  stac_version:
                    title: STAC version
                    type: string
                    example: 1.0.0-beta.2
                  stac_extensions:
                    title: STAC extensions
                    type: array
                    uniqueItems: true
                    items:
                      anyOf:
                        - title: Reference to a JSON Schema
                          type: string
                          format: uri
                        - title: Reference to a core extension
                          type: string
                  type:
                    type: string
                    enum:
                      - FeatureCollection
                  features:
                    type: array
                    items:
                      description: A GeoJSON Feature augmented with foreign members that contain values relevant to a STAC entity
                      type: object
                      required:
                        - stac_version
                        - id
                        - type
                        - geometry
                        - bbox
                        - links
                        - properties
                        - assets
                      properties:
                        stac_version:
                          $ref: '#/paths/~1search/post/responses/200/content/application~1geo%2Bjson/schema/properties/stac_version'
                        stac_extensions:
                          $ref: '#/paths/~1search/post/responses/200/content/application~1geo%2Bjson/schema/properties/stac_extensions'
                        id:
                          type: string
                          description: 'Provider identifier, a unique ID.'
                        bbox:
                          $ref: '#/components/schemas/bboxFilter/properties/bbox'
                        geometry:
                          $ref: '#/components/schemas/intersectsFilter/properties/intersects'
                        type:
                          type: string
                          description: The GeoJSON type
                          enum:
                            - Feature
                        links:
                          type: array
                          items:
                            $ref: '#/paths/~1search/post/responses/200/content/application~1geo%2Bjson/schema/properties/links/items'
                        assets:
                          type: object
                          additionalProperties:
                            type: object
                            required:
                              - href
                            properties:
                              href:
                                type: string
                                format: url
                                description: Link to the asset object
                                example: 'http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04/thumb.png'
                              title:
                                type: string
                                description: Displayed title
                                example: Thumbnail
                              description:
                                type: string
                                description: |-
                                  Multi-line description to explain the asset.

                                  [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for rich text representation.
                                example: Small 256x256px PNG thumbnail for a preview.
                              type:
                                type: string
                                description: Media type of the asset
                                example: image/png
                              roles:
                                type: array
                                items:
                                  type: string
                                description: Purposes of the asset
                                example:
                                  - thumbnail
                      example:
                        stac_version: 1.0.0
                        stac_extensions:
                          - eo
                          - view
                          - 'https://example.com/cs-extension/1.0/schema.json'
                        type: Feature
                        id: CS3-20160503_132131_05
                        bbox:
                          - -122.59750209
                          - 37.48803556
                          - -122.2880486
                          - 37.613537207
                        geometry:
                          type: Polygon
                          coordinates:
                            - - - -122.308150179
                                - 37.488035566
                              - - -122.597502109
                                - 37.538869539
                              - - -122.576687533
                                - 37.613537207
                              - - -122.2880486
                                - 37.562818007
                              - - -122.308150179
                                - 37.488035566
                        properties:
                          datetime: '2016-05-03T13:22:30.040Z'
                          title: A CS3 item
                          license: PDDL-1.0
                          providers:
                            - name: CoolSat
                              roles:
                                - producer
                                - licensor
                              url: 'https://cool-sat.com/'
                          'view:sun_azimuth': 168.7
                          'eo:cloud_cover': 0.12
                          'view:off_nadir': 1.4
                          platform: coolsat2
                          instruments:
                            - cool_sensor_v1
                          'eo:bands': []
                          'view:sun_elevation': 33.4
                          'eo:gsd': 0.512
                        collection: CS3
                        links:
                          - rel: self
                            href: 'http://cool-sat.com/collections/CS3/items/20160503_132130_04'
                          - rel: root
                            href: 'http://cool-sat.com/collections'
                          - rel: parent
                            href: 'http://cool-sat.com/collections/CS3'
                          - rel: collection
                            href: 'http://cool-sat.com/collections/CS3'
                        assets:
                          analytic:
                            href: 'http://cool-sat.com/static-catalog/CS3/20160503_132130_04/analytic.tif'
                            title: 4-Band Analytic
                          thumbnail:
                            href: 'http://cool-sat.com/static-catalog/CS3/20160503_132130_04/thumbnail.png'
                            title: Thumbnail
                  links:
                    type: array
                    description: 'An array of links. Can be used for pagination, e.g. by providing a link with the `next` relation type.'
                    items:
                      title: Link
                      type: object
                      required:
                        - href
                        - rel
                      properties:
                        href:
                          type: string
                          format: uri
                          description: The location of the resource
                        rel:
                          type: string
                          description: Relation type of the link
                        type:
                          type: string
                          description: The media type of the resource
                        title:
                          type: string
                          description: Title of the resource
                        method:
                          type: string
                          enum:
                            - GET
                            - POST
                          default: GET
                          description: Specifies the HTTP method that the resource expects
                        headers:
                          type: object
                          description: Object key values pairs they map to headers
                          example:
                            Accept: application/json
                        body:
                          type: object
                          description: 'For POST requests, the resource can specify the HTTP body as a JSON object.'
                        merge:
                          type: boolean
                          default: false
                          description: |-
                            This is only valid when the server is responding to POST request.

                            If merge is true, the client is expected to merge the body value
                            into the current request body before following the link.
                            This avoids passing large post bodies back and forth when following
                            links, particularly for navigating pages through the `POST /search`
                            endpoint.

                            NOTE: To support form encoding it is expected that a client be able
                            to merge in the key value pairs specified as JSON
                            `{"next": "token"}` will become `&next=token`.
                    example:
                      - rel: next
                        href: 'http://api.cool-sat.com/search?next=ANsXtp9mrqN0yrKWhf-y2PUpHRLQb1GT-mtxNcXou8TwkXhi1Jbk'
            text/html:
              schema:
                type: string
        default:
          $ref: '#/paths/~1search/get/responses/default'
components:
  parameters:
    ids:
      name: ids
      in: query
      description: Array of Item ids to return.
      required: false
      schema:
        $ref: '#/components/schemas/ids'
      explode: false
    collectionsArray:
      name: collections
      in: query
      description: |
        Array of Collection IDs to include in the search for items.
        Only Items in one of the provided Collections will be searched
      required: false
      schema:
        $ref: '#/components/schemas/collectionsArray'
      explode: false
    datetime:
      name: datetime
      in: query
      description: |-
        Either a date-time or an interval, open or closed. Date and time expressions
        adhere to RFC 3339. Open intervals are expressed using double-dots.

        Examples:

        * A date-time: "2018-02-12T23:20:50Z"
        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

        Only features that have a temporal property that intersects the value of
        `datetime` are selected.

        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      required: false
      schema:
        type: string
      style: form
      explode: false
    bbox:
      name: bbox
      in: query
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on
        whether the coordinate reference system includes a vertical axis (height
        or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS 84
        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).

        For WGS 84 longitude/latitude the values are in most cases the sequence
        of minimum longitude, minimum latitude, maximum longitude and maximum
        latitude. However, in cases where the box spans the antimeridian the
        first value (west-most box edge) is larger than the third value
        (east-most box edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the
        decision of the server whether only a single spatial geometry property
        is used to determine the extent or all relevant geometries.

        Example: The bounding box of the New Zealand Exclusive Economic Zone in
        WGS 84 (from 160.6°E to 170°W and from 55.95°S to 25.89°S) would be
        represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as
        `bbox=160.6,-55.95,-170,-25.89`.
      required: false
      schema:
        type: array
        oneOf:
          - minItems: 4
            maxItems: 4
          - minItems: 6
            maxItems: 6
        items:
          type: number
      style: form
      explode: false
    limit:
      name: limit
      in: query
      description: |-
        The optional limit parameter limits the number of items that are presented in the response document.

        Only items are counted that are on the first level of the collection in the response document.
        Nested objects contained within the explicitly requested items shall not be counted.

        Minimum = 1. Maximum = 10000. Default = 10.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10
      style: form
      explode: false
  schemas:
    searchBody:
      description: The search criteria
      type: object
      allOf:
        - $ref: '#/components/schemas/bboxFilter'
        - $ref: '#/components/schemas/datetimeFilter'
        - $ref: '#/components/schemas/intersectsFilter'
        - $ref: '#/components/schemas/collectionsFilter'
        - $ref: '#/components/schemas/idsFilter'
        - $ref: '#/components/schemas/limitFilter'
    limit:
      type: integer
      minimum: 1
      example: 10
      default: 10
      maximum: 10000
      description: The maximum number of results to return (page size). Defaults to 10
    bboxFilter:
      type: object
      description: Only return items that intersect the provided bounding box.
      properties:
        bbox:
          description: |-
            Only features that have a geometry that intersects the bounding box are
            selected. The bounding box is provided as four or six numbers,
            depending on whether the coordinate reference system includes a
            vertical axis (elevation or depth):

            * Lower left corner, coordinate axis 1
            * Lower left corner, coordinate axis 2  
            * Lower left corner, coordinate axis 3 (optional) 
            * Upper right corner, coordinate axis 1 
            * Upper right corner, coordinate axis 2 
            * Upper right corner, coordinate axis 3 (optional)

            The coordinate reference system of the values is WGS84
            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless
            a different coordinate reference system is specified in the parameter
            `bbox-crs`.

            For WGS84 longitude/latitude the values are in most cases the sequence
            of minimum longitude, minimum latitude, maximum longitude and maximum
            latitude. However, in cases where the box spans the antimeridian the
            first value (west-most box edge) is larger than the third value
            (east-most box edge).

            If a feature has multiple spatial geometry properties, it is the
            decision of the server whether only a single spatial geometry property
            is used to determine the extent or all relevant geometries.

            Example: The bounding box of the New Zealand Exclusive Economic Zone in
            WGS 84 (from 160.6°E to 170°W and from 55.95°S to 25.89°S) would be
            represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as
            `bbox=160.6,-55.95,-170,-25.89`.
          type: array
          minItems: 4
          maxItems: 6
          items:
            type: number
          example:
            - -110
            - 39.5
            - -105
            - 40.5
    collectionsArray:
      type: array
      description: |-
        Array of Collection IDs to include in the search for items.
        Only Items in one of the provided Collections will be searched.
      items:
        type: string
    ids:
      type: array
      description: Array of Item ids to return.
      items:
        type: string
    datetimeFilter:
      description: An object representing a date+time based filter.
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/datetime_interval'
    intersectsFilter:
      type: object
      description: Only returns items that intersect with the provided polygon.
      properties:
        intersects:
          oneOf:
            - type: object
              required:
                - type
                - coordinates
              properties:
                type:
                  type: string
                  enum:
                    - Point
                coordinates:
                  type: array
                  minItems: 2
                  items:
                    type: number
            - type: object
              required:
                - type
                - coordinates
              properties:
                type:
                  type: string
                  enum:
                    - MultiPoint
                coordinates:
                  type: array
                  items:
                    type: array
                    minItems: 2
                    items:
                      type: number
            - type: object
              required:
                - type
                - coordinates
              properties:
                type:
                  type: string
                  enum:
                    - LineString
                coordinates:
                  type: array
                  minItems: 2
                  items:
                    type: array
                    minItems: 2
                    items:
                      type: number
            - type: object
              required:
                - type
                - coordinates
              properties:
                type:
                  type: string
                  enum:
                    - MultiLineString
                coordinates:
                  type: array
                  items:
                    type: array
                    minItems: 2
                    items:
                      type: array
                      minItems: 2
                      items:
                        type: number
            - type: object
              required:
                - type
                - coordinates
              properties:
                type:
                  type: string
                  enum:
                    - Polygon
                coordinates:
                  type: array
                  items:
                    type: array
                    minItems: 4
                    items:
                      type: array
                      minItems: 2
                      items:
                        type: number
            - type: object
              required:
                - type
                - coordinates
              properties:
                type:
                  type: string
                  enum:
                    - MultiPolygon
                coordinates:
                  type: array
                  items:
                    type: array
                    items:
                      type: array
                      minItems: 4
                      items:
                        type: array
                        minItems: 2
                        items:
                          type: number
            - type: object
              required:
                - type
                - geometries
              properties:
                type:
                  type: string
                  enum:
                    - GeometryCollection
                geometries:
                  type: array
                  items:
                    $ref: '#/components/schemas/intersectsFilter/properties/intersects'
    limitFilter:
      type: object
      description: Only returns maximum number of results (page size)
      properties:
        limit:
          $ref: '#/components/schemas/limit'
    idsFilter:
      type: object
      description: Only returns items that match the array of given ids
      properties:
        ids:
          $ref: '#/components/schemas/ids'
    collectionsFilter:
      type: object
      description: Only returns the collections specified
      properties:
        collections:
          $ref: '#/components/schemas/collectionsArray'
    datetime_interval:
      type: string
      description: |-
        Either a date-time or an interval, open or closed. Date and time expressions
        adhere to RFC 3339. Open intervals are expressed using double-dots.

        Examples:

        * A date-time: "2018-02-12T23:20:50Z"
        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

        Only features that have a temporal property that intersects the value of
        `datetime` are selected.

        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'
